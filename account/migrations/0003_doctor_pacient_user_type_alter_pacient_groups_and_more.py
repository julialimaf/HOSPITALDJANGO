# Generated by Django 5.2.5 on 2025-09-24 18:00

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('account', '0002_remove_pacient_username'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crm', models.CharField(max_length=7, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('specialty', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=11)),
            ],
            options={
                'db_table': 'account_doctor',
            },
        ),
        migrations.AddField(
            model_name='pacient',
            name='user_type',
            field=models.CharField(default='pacient', max_length=10),
        ),
        migrations.AlterField(
            model_name='pacient',
            name='groups',
            field=models.ManyToManyField(blank=True, related_name='pacient_set', to='auth.group'),
        ),
        migrations.AlterField(
            model_name='pacient',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, related_name='pacient_set', to='auth.permission'),
        ),
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('reason', models.TextField()),
                ('pacient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.doctor')),
            ],
            options={
                'db_table': 'account_consultation',
            },
        ),
        migrations.CreateModel(
            name='Medico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('crm', models.CharField(max_length=10, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=30, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=30, verbose_name='Last_name')),
                ('phone', models.CharField(max_length=11, verbose_name='Phone')),
                ('especialidade', models.CharField(max_length=50, verbose_name='Especialidade')),
                ('user_type', models.CharField(default='medico', max_length=10)),
                ('groups', models.ManyToManyField(blank=True, related_name='medico_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='medico_set', to='auth.permission')),
            ],
            options={
                'db_table': 'account_medico',
            },
        ),
    ]
